# See: http://wiki.flightgear.org/MapStructure
# Class things:
var name = 'ALT-profile';
var parents = [SymbolLayer.Controller];
var __self__ = caller(0)[0];
var nd_props = canvas.NDConfig.properties;
var _options = { # default configuration options
    active_node: nd_props.fplan_active,
    vnav_node: nd_props.vnav_node,
    types: ["tc", "td", "ec", "ed", "sc", "sd"],
};
SymbolLayer.Controller.add(name, __self__);
SymbolLayer.add(name, {
    parents: [MultiSymbolLayer],
    type: name, # Symbol type
    df_controller: __self__, # controller to use by default -- this one
});
var new = func(layer) {
    var m = {
        parents: [__self__],
        layer: layer,
        #map: layer.map,
        listeners: [],
    };
    layer.searcher._equals = func(a,b) a.getName() == b.getName();
    return m;
};
var del = func() {
    foreach (var l; me.listeners)
        removelistener(l);
};
 
var searchCmd = func {
    var results = [];
    var symNode = props.globals.getNode(me._options.vnav_node);
    if (symNode != nil)
        foreach (var t; me._options.types) {
            var n = symNode.getNode(t);
            if (n != nil and n.getValue('longitude-deg') != nil){
                append(results, n);
            }
        }
    return results;
}
