# See: http://wiki.flightgear.org/MapStructure
# Class things:
var name = 'APT';
var parents = [DotSym];
var __self__ = caller(0)[0];
DotSym.makeinstance( name, __self__ );
 
var element_type = "group"; # we want a group, becomes "me.element"
var icon_apt = nil;
var text_apt = nil;
 
# add the draw routine from airports-nd.draw here
var init = func(){
        
    var apt_name = me.model.id;#me.model.name;
    var apt_grp = me.element.createChild("group", apt_name);

    SymbolPainter.drawAirport(apt_grp);
    me.text_apt = apt_grp.createChild("text", apt_name ~ " label")
    .setDrawMode( canvas.Text.TEXT )
    .setTranslation(45,35)
    .setText(apt_name)
    .setFont("LiberationFonts/LiberationSans-Regular.ttf")
    .setColor(1,1,1)
    .setFontSize(28);
    apt_grp.set("z-index",1); # FIXME: this needs to be configurable!!
    #}

    # draw routines should always return their canvas group to the caller for further processing

}
var draw = func;
